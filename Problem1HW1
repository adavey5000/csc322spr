Triangle:
Link: https://jsfiddle.net/n8pw5v93/latest/
Code:
import * as THREE from 'https://threejsfundamentals.org/threejs/resources/threejs/r132/build/three.module.js';

const renderer = new THREE.WebGLRenderer();
renderer.setSize( window.innerWidth, window.innerHeight );
document.body.appendChild( renderer.domElement );

const camera = new THREE.PerspectiveCamera( 30, window.innerWidth / window.innerHeight, 1, 450 );
camera.position.set( 0, 0, 100 );
camera.lookAt( 0, 0, 0 );

const scene = new THREE.Scene();

const material = new THREE.LineBasicMaterial( { color: 0xfff000 } );

const points = [];
points.push( new THREE.Vector3( - 10, 0, 0 ) );
points.push( new THREE.Vector3( 0, 17.32, 0 ) );
points.push( new THREE.Vector3( 10, 0, 0 ) );
points.push( new THREE.Vector3( -10, 0, 0 ) );

const geometry = new THREE.BufferGeometry().setFromPoints( points );

const line = new THREE.Line( geometry, material );

scene.add( line );

renderer.render( scene, camera );

Tetrahedron:
Link: https://jsfiddle.net/of368uys/
Code:
//import
import * as THREE from 'https://threejsfundamentals.org/threejs/resources/threejs/r132/build/three.module.js';


const renderer = new THREE.WebGLRenderer();
renderer.setSize( window.innerWidth, window.innerHeight );
document.body.appendChild( renderer.domElement );

const camera = new THREE.PerspectiveCamera( 30, window.innerWidth / window.innerHeight, 1, 450 );
camera.position.set( 0, 0, 100 );
camera.lookAt( 0, 0, 0 );

const scene = new THREE.Scene();

const material = new THREE.LineBasicMaterial( { color: 0xfff00000 } );

const points = [];
points.push( new THREE.Vector3( - 10, 0, -2 ) );
points.push( new THREE.Vector3( 0, 17.32, 0 ) );
points.push( new THREE.Vector3( 10, 0, -2 ) );
points.push( new THREE.Vector3( -10, 0, -2 ) );

points.push( new THREE.Vector3( -2, -5, -2 ) );
points.push( new THREE.Vector3( 0, 17.32, 0 ) );
points.push( new THREE.Vector3( 10, 0, -2 ) );
points.push( new THREE.Vector3( -2, -5, -2 ) );
 
const geometry = new THREE.BufferGeometry().setFromPoints( points );

const line = new THREE.Line( geometry, material );

scene.add( line );

renderer.render( scene, camera );

